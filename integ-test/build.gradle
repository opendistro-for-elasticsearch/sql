apply plugin: 'elasticsearch.build'
apply plugin: 'elasticsearch.rest-test'
apply plugin: 'java'

ext {
    projectSubstitutions = [:]
    licenseFile = rootProject.file('LICENSE.TXT')
    noticeFile = rootProject.file('NOTICE')
}

repositories {
    mavenCentral()
}

configurations.all {
    exclude group: "commons-logging", module: "commons-logging"
}

dependencies {
    testCompile group: 'org.elasticsearch.test', name: 'framework', version: "${es_version}"
    testCompile group: 'org.elasticsearch.client', name: 'elasticsearch-rest-high-level-client', version: "${es_version}"
    testCompile group: 'org.elasticsearch.client', name: 'elasticsearch-rest-client', version: "${es_version}"
    testCompile group: 'org.hamcrest', name: 'hamcrest', version: '2.1'
    testCompile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.11.1'
    testCompile project(path: ':', configuration: 'integtest')
    testCompile project(':plugin')
    testImplementation('org.junit.jupiter:junit-jupiter-api:5.6.2')
    testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine:5.6.2')
}

dependencyLicenses.enabled = false
testingConventions.enabled = false
checkstyleTest.ignoreFailures = true
forbiddenApisTest.enabled = false

test {
    useJUnitPlatform()
}

tasks.integTest.dependsOn(':plugin:bundlePlugin')
testClusters.integTest {
    testDistribution = 'oss'
    plugin file(tasks.getByPath(':plugin:bundlePlugin').archiveFile)
}

integTest.runner {
    systemProperty 'tests.security.manager', 'false'
    systemProperty('project.root', project.rootDir.absolutePath)

    if (System.getProperty("test.debug") != null) {
        jvmArgs '-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=*:5005'
    }
}