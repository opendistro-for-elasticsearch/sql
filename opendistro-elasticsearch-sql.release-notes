## 2019-10-15, Version 1.2.1 (Current)

### Notable changes
* Feature [#202](https://github.com/opendistro-for-elasticsearch/sql/issues/202): Elasticsearch 7.2.1 compatibility


## 2019-07-23, Version 1.2.0 

### Notable changes
* Feature [#125](https://github.com/opendistro-for-elasticsearch/sql/issues/125): Elasticsearch 7.2.0 compatibility
* Feature [#103](https://github.com/opendistro-for-elasticsearch/sql/issues/103): Sort on custom script based functions 

* BugFix [#104](https://github.com/opendistro-for-elasticsearch/sql/issues/104): GROUP BY and ORDER BY for custom script based functions 
generated wrong DSL
* BugFix [#95](https://github.com/opendistro-for-elasticsearch/sql/issues/95): NPE thrown when selecting all in query with nested fields involved
* BugFix [#108](https://github.com/opendistro-for-elasticsearch/sql/issues/108): Custom script based functions weren't supported in JDBC

and other minor bugfixes

## 2019-06-21, Version 1.1.0

### Notable Changes

* Feature [#90](https://github.com/opendistro-for-elasticsearch/sql/issues/90): Elasticsearch 7.1.1 compatibility
* Migration [#17](https://github.com/opendistro-for-elasticsearch/sql/issues/17): Finished integ test migration and deprecated Maven build.
* Enhancement [#34](https://github.com/opendistro-for-elasticsearch/sql/issues/34): Detached request ID from SqlRequest object.

* BugFix [#46](https://github.com/opendistro-for-elasticsearch/sql/issues/46): Multi-index queries require identical mappings for indices.
* BugFix [#92](https://github.com/opendistro-for-elasticsearch/sql/issues/92): Improper handling of SELECT statement
* BugFix [#93](https://github.com/opendistro-for-elasticsearch/sql/issues/93): Blank query causes IndexOutOfBoundsException


## 2019-06-10, Version 1.0.0

### Notable Changes

* Feature [#47](https://github.com/opendistro-for-elasticsearch/sql/issues/47): Support for Elasticsearch 7.0.1.
* Feature [#56](https://github.com/opendistro-for-elasticsearch/sql/issues/56): Adding coverage report.
* Feature [#65](https://github.com/opendistro-for-elasticsearch/sql/issues/65): Support for enabling/disabling SQL feature.

* BugFix [#44](https://github.com/opendistro-for-elasticsearch/sql/issues/44): Fixing the order of fields in csv output
* BugFix [#68](https://github.com/opendistro-for-elasticsearch/sql/issues/68): Support number field
* BugFix [#37](https://github.com/opendistro-for-elasticsearch/sql/issues/37): Fix for PERCENTILES query result in csv output


## 2019-04-19, Version 0.9.0

### Notable Changes

* Feature [#29](https://github.com/opendistro-for-elasticsearch/sql/issues/29): Add support for Elasticsearch 6.7.1
* Migration [#17](https://github.com/opendistro-for-elasticsearch/sql/issues/17): Migrate legacy integration tests in Maven to ES test in Gradle.


## 2019-04-02, Version 0.8.0

### Notable Changes

* Feature [#12](https://github.com/opendistro-for-elasticsearch/sql/issues/12): Add support for Elasticsearch 6.6.2
* Bug fix [#9](https://github.com/opendistro-for-elasticsearch/sql/issues/9): Fix issue for query by index pattern in JDBC driver.
* Bug fix [#10](https://github.com/opendistro-for-elasticsearch/sql/issues/10): Return friendly error message instead of NPE for illegal query and other exception cases.


## 2019-03-11, Version 0.7.0

### Notable Changes

In this release, the following features are added with many other minor improvements and bug fixes.

* **SQL HAVING**:
  * Add support for SQL HAVING to filter aggregated result after GROUP BY.
* **SQL Functions**:
  * Common math functions as well as date function are available.
* **Nested Field Query**:
  * Query nested field in SQL++ syntax instead of explicit nested() function.
* **JSON in RESTful Request**:
  * Support JSON payload to allow for ESRally benchmark and parameters in JDBC request. And also pretty format and flatten native Elasticsearch DSL as response.
* **Block Hash Join**:
  * Introduced new query planning framework and new hash join algorithm with memory protection mechanism to perform hash join block by block safely.


### Major Refactoring & Architecture Changes

* **Avoid I/O Operation in NIO Thread**
  * Move I/O blocking operations to custom worker thread pool or prefetch to avoid blocking. Meanwhile non-blocking operations still run in Elasticsearch transport thread for efficiency.


### Commits

* [[`56dd269`](https://github.com/mauve-hedgehog/opendistro-elasticsearch-sql/commit/56dd269871259dae9fb77ab512005b9a714d728e)] Initial commit
