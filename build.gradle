/*
 *   Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
 *
 *   Licensed under the Apache License, Version 2.0 (the "License").
 *   You may not use this file except in compliance with the License.
 *   A copy of the License is located at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   or in the "license" file accompanying this file. This file is distributed
 *   on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
 *   express or implied. See the License for the specific language governing
 *   permissions and limitations under the License.
 */

buildscript {
    ext {
        es_version = "7.9.1"
    }

    repositories {
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
        jcenter()
    }

    dependencies {
        classpath "org.elasticsearch.gradle:build-tools:${es_version}"
    }
}

plugins {
    id 'nebula.ospackage' version "8.3.0"
    id 'java-library'
    id 'checkstyle'
    id "io.freefair.lombok" version "5.0.0-rc4"
    id 'jacoco'
}

// Repository on root level is for dependencies that project code depends on. And this block must be placed after plugins{}
repositories {
    mavenCentral() // For Elastic Libs that you can use to get started coding until open ES libs are available
}

ext {
    opendistroVersion = '1.10.1'
    isSnapshot = "true" == System.getProperty("build.snapshot", "true")
}

allprojects {
    version = "${opendistroVersion}.1"

    plugins.withId('java') {
        sourceCompatibility = targetCompatibility = "1.8"
    }
}

// TODO: fix compiler warnings
compileJava.options.warnings = false
compileJava {
    options.compilerArgs.addAll(["-processor", 'lombok.launch.AnnotationProcessorHider$AnnotationProcessor'])
    doFirst {
        // TODO: do not fail build on warnings, need to fix all compiler warnings
        options.compilerArgs.remove('-Werror')
        // TODO: need to fix all java doc format
        options.compilerArgs.remove('-Xdoclint:all')
    }
}
// TODO: Similarly, need to fix compiling errors in test source code
compileTestJava.options.warnings = false
compileTestJava {
    options.compilerArgs.addAll(["-processor", 'lombok.launch.AnnotationProcessorHider$AnnotationProcessor'])
    doFirst {
        options.compilerArgs.remove('-Werror')
        options.compilerArgs.remove('-Xdoclint:all')
    }
}

jacoco {
    toolVersion = "0.8.5"
}
jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
    }
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it,
                    exclude: ['**/antlr/parser/**'])
        }))
    }
}
test.finalizedBy(project.tasks.jacocoTestReport)
jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.5
            }

        }
    }
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it,
                    exclude: ['**/antlr/parser/**'])
        }))
    }
}
check.dependsOn jacocoTestCoverageVerification

// TODO: fix code style in main and test source code
subprojects {
    apply plugin: 'checkstyle'
    checkstyle {
        configFile rootProject.file("config/checkstyle/google_checks.xml")
        toolVersion "8.20"
        configProperties = [
                "org.checkstyle.google.suppressionfilter.config": rootProject.file("config/checkstyle/suppressions.xml")]
        ignoreFailures = false
    }
}
checkstyle {
    configFile file("config/checkstyle/checkstyle.xml")
}
checkstyleMain.ignoreFailures = false
checkstyleTest.ignoreFailures = true

