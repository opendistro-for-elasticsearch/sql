plugins {
    id 'java'
    id "io.freefair.lombok"
    id 'jacoco'
}

repositories {
    mavenCentral()
}

dependencies {
    compile project(':core')
    compile group: 'org.elasticsearch', name: 'elasticsearch', version: "${es_version}"
    compile "io.github.resilience4j:resilience4j-retry:1.5.0"
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.10.4'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.10.4'
    compile group: 'org.json', name: 'json', version:'20180813'
    compileOnly group: 'org.elasticsearch.client', name: 'elasticsearch-rest-high-level-client', version: "${es_version}"

    testImplementation('org.junit.jupiter:junit-jupiter:5.6.2')
    testCompile group: 'org.hamcrest', name: 'hamcrest-library', version: '2.1'
    testCompile group: 'org.mockito', name: 'mockito-core', version: '3.5.0'
    testCompile group: 'org.mockito', name: 'mockito-junit-jupiter', version: '3.5.0'
    testCompile group: 'org.elasticsearch.client', name: 'elasticsearch-rest-high-level-client', version: "${es_version}"
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat "full"
    }
}

jacoco {
    toolVersion = "0.8.5"
}
jacocoTestReport {
    reports {
        html.enabled true
        xml.enabled true
    }
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it)
        }))
    }
}
test.finalizedBy(project.tasks.jacocoTestReport)

jacocoTestCoverageVerification {
    violationRules {
        rule {
            element = 'CLASS'
            excludes = [
                    'com.amazon.opendistroforelasticsearch.sql.elasticsearch.security.SecurityAccess'
            ]
            limit {
                counter = 'LINE'
                minimum = 1.0
            }
            limit {
                counter = 'BRANCH'
                minimum = 1.0
            }
        }
    }
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it)
        }))
    }
}
check.dependsOn jacocoTestCoverageVerification
jacocoTestCoverageVerification.dependsOn jacocoTestReport